docker-client:
  # Official docker image.
  image: docker:latest
  stage: build
  services:
    - docker:dind
  before_script:
    - cd frontend
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
  script:
    - docker build --pull -t "$CI_REGISTRY_IMAGE"/client:latest .
    - docker tag "$CI_REGISTRY_IMAGE"/client:latest "$CI_REGISTRY_IMAGE"/client:${CI_COMMIT_SHORT_SHA}
    - docker push "$CI_REGISTRY_IMAGE"/client:latest
    - docker push "$CI_REGISTRY_IMAGE"/client:${CI_COMMIT_SHORT_SHA}
  only:
    - main

docker-server:
  # Official docker image.
  image: docker:latest
  stage: build
  services:
    - docker:dind
  before_script:
    - cd backend
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
  script:
    - docker build --pull -t "$CI_REGISTRY_IMAGE"/server:latest .
    - docker tag "$CI_REGISTRY_IMAGE"/server:latest "$CI_REGISTRY_IMAGE"/server:${CI_COMMIT_SHORT_SHA}
    - docker push "$CI_REGISTRY_IMAGE"/server:latest
    - docker push "$CI_REGISTRY_IMAGE"/server:${CI_COMMIT_SHORT_SHA}
  only:
    - main

docker-db:
  # Official docker image.
  image: docker:latest
  stage: build
  services:
    - docker:dind
  before_script:
    - cd backend
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
  script:
    - docker build --pull -t "$CI_REGISTRY_IMAGE"/db:latest .
    - docker tag "$CI_REGISTRY_IMAGE"/db:latest "$CI_REGISTRY_IMAGE"/db:${CI_COMMIT_SHORT_SHA}
    - docker push "$CI_REGISTRY_IMAGE"/db:latest
    - docker push "$CI_REGISTRY_IMAGE"/db:${CI_COMMIT_SHORT_SHA}
  only:
    - main

